These are all the tests that the dev run for swift,
need to convert them to something we can use somewhere

x_with_server "Running tests on admin1" admin1 <<EOF
pushd /root/exerstack
./exercise.sh grizzly swift.sh
popd


pushd /root/kong
ONESHOT=1 ./run_tests.sh -V --version grizzly --swift --keystone
popd

# verify swiftops user can dsh to all nodes
if [[ -e "/etc/redhat-release" ]]; then
    su swiftops -c "pdsh -g swift hostname" | wc -l | grep ^$[ ${#cluster[@]} - 1 ]
else
    su swiftops -c "dsh -Mcg swift hostname" | wc -l | grep ^$[ ${#cluster[@]} - 1 ]
fi

# verify swift-recon works
swift-recon --md5  | grep '^3/3 hosts matched'

# verify dispersion reports are configured
swift-dispersion-populate
swift-dispersion-report | grep '100.00%' | grep '6 of 6'

# verify ntp is configured on all nodes
num_ntpclients="\$(echo 'monlist' | ntpdc  | grep 192.168 | wc -l)"
if [[ "\$num_ntpclients" -ne 4 ]]; then
    echo "Expected 4 ntp clients on 192.168 network, found \${num_ntpclients}" 1>&2
    exit 1
fi

# verify syslog is configured to log to admin node
if [[ -e "/etc/redhat-release" ]]; then
    su swiftops -c "pdsh -g swift sudo swift-init all restart"
else
    su swiftops -c "dsh -Mcg swift sudo swift-init all restart"
fi

if [[ "\$(ls /var/log/swift | wc -l)" -lt 5 ]]; then
   echo "Expecting at least five files in /var/log/swift" 1>&2
   exit 1
fi

# verify that servers in the swift network can relay through admin
# send mail and start queue run
iptables -I OUTPUT 1 -p tcp -m tcp --dport 25 -j REJECT
if [[ -e "/etc/redhat-release" ]]; then
  su swiftops -c "pdsh -g swift mailx -s testing test@rackspace.com \</dev/null"
  su swiftops -c "pdsh -g swift sudo exim -q -v"
else
  su swiftops -c "dsh -Mcg swift mailx -s testing test@rackspace.com \</dev/null"
  su swiftops -c "dsh -Mcg swift sudo exim -q -v"
fi
sleep 5

# start a local queue run
exim -q -v
sleep 5

if [[ "\$(iptables -L OUTPUT 1 -v | xargs | cut -d' ' -f1)" -eq 0 ]]; then
  echo "Mail was not successfully relayed" 1>&2
  exit 1
fi

# verify object expirer is running on admin node
if [[ "\$(pgrep -f object-expirer | wc -l)" -eq 0 ]]; then
   echo "Swift object expirer is not running on admin node" 1>&2
   exit 1
fi
EOF

fc_do